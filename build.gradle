buildscript {
    repositories {
      
        maven { url 'http://nexus.ifv.kit.edu/repository/maven-central/' }
        maven { url 'https://nexus.ifv.kit.edu/repository/maven-releases/' }
        maven { url 'https://nexus.ifv.kit.edu/repository/maven-snapshots/' }
          mavenLocal()
        mavenCentral()
        jcenter()
    }
    //dependencies {
	//  classpath "edu.kit.ifv.codegen.gradle.plugin:code-gen-gradle-plugin:latest.integration"
  	//}
}


plugins {
    id 'java'
    id 'eclipse'
    id 'maven'
    id 'signing'
    id "com.jfrog.bintray" version "1.8.5"
    id "com.jfrog.artifactory" version "4.15.2"
    id "maven-publish"
    id 'jacoco'
}

group = 'edu.kit.ifv.mobitopp'
archivesBaseName = "logitopp"
version = project.hasProperty('next_version') ? project.property('next_version') : '0.0-SNAPSHOT'
wrapper.gradleVersion = '6.3'

sourceCompatibility = 1.12
targetCompatibility = 1.12

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
    maven { url "https://jitpack.io" }
}

configurations.all {
    exclude group: 'xerces', module: 'xerces'
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    
    compileOnly 'org.projectlombok:lombok:1.18.8'
    
	compile 'edu.kit.ifv.mobitopp:mobitopp:0.2.3+',
			'org.jgrapht:jgrapht-core:1.3.0'
	 
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0',
                       'org.junit.jupiter:junit-jupiter-migrationsupport:5.7.0',
                       'org.junit.vintage:junit-vintage-engine:5.7.0',
                       'org.mockito:mockito-core:3.0.0',
                       'org.assertj:assertj-core:3.13.2'
}

//def choiceModelsDirectory = "${rootDir}/choice-models"
//apply plugin: 'edu.kit.ifv.codegen.gradle.plugin'
//codeGenInp {
//  outputDir = "${rootDir}/src/main/java"
//  files = ["${choiceModelsDirectory}/number-of-parcels-choice-model.gen", 
//           "${choiceModelsDirectory}/parcel-destination-choice-model.gen"]
//}
//compileJava.dependsOn('generateCode')

print(getPropertyOrDefault('user_sona'))
print(getPropertyOrDefault('pw_sona'))

test {
    useJUnitPlatform()
    enableAssertions = "true"
    maxHeapSize = "2G"
    testLogging.showStandardStreams = true
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


//publishing {
//    publications {
//        release(MavenPublication) {
//            from components.java
//            artifact sourcesJar
//            artifact javadocJar
//            groupId project.group
//            artifactId project.name
//            version project.version
//        }
//        snapshot(MavenPublication) {
//            from components.java
//            artifact sourcesJar
//            artifact javadocJar
//            groupId project.group
//            artifactId project.name
//            def buildNumber = project.hasProperty('build_number') ? project.property('build_number') : '123'
//            def snapshotVersion = project.version.replaceAll("\\.${buildNumber}", '') + '-SNAPSHOT'
//            version snapshotVersion
//        }
//    }
//    repositories {
//        maven {
//        	name = 'internal'
//            credentials {
//                username getPropertyOrDefault('repositoryUsername')
//                password getPropertyOrDefault('repositoryPassword')
//            }
//            def repositoryUrl = getPropertyOrDefault('repositoryUrl')
//            def releasesRepoUrl = "${repositoryUrl}/repository/maven-releases"
//            def snapshotsRepoUrl = "${repositoryUrl}/repository/maven-snapshots"
//            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//        }
//        maven {
//        	name = 'external'
//            credentials {
//                username getPropertyOrDefault('ossrhUsername')
//                password getPropertyOrDefault('ossrhPassword')
//            }
//
//            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
//            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//        }
//    }
//}


def getPropertyOrDefault(key) {
    return project.hasProperty(key) ? project.property(key) : key
}